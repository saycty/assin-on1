name: Build and Publish Docker image on Release

on:
  release:
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract release metadata
        id: meta
        run: |
          echo "REPO=${GITHUB_REPOSITORY}" >> $GITHUB_ENV
          # Prefer release tag_name, fall back to release name
          TAG="${{ github.event.release.tag_name }}"
          if [ -z "$TAG" ]; then TAG="${{ github.event.release.name }}"; fi
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.REPO }}:${{ env.TAG }}
            ghcr.io/${{ env.REPO }}:latest

      - name: Create git tag if release has no tag
        if: ${{ !github.event.release.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ github.event.release.name }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG" -m "Tag created from GitHub Release $TAG"
          git push origin "$TAG"
